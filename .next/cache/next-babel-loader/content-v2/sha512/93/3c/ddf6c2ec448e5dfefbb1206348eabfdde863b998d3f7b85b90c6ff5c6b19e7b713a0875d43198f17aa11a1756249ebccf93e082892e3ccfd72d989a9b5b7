{"ast":null,"code":"import _regeneratorRuntime from \"/home/asd/Work/Learning/next-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/asd/Work/Learning/next-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport api from \"../apiProvider\";\nexport default function useAuthentication(text, pageType) {\n  _s();\n\n  var router = useRouter();\n  console.log(\"base url\", process.env.BASE_URL);\n  useEffect(function () {\n    api(\"verifyToken\", \"POST\").then(function (userVerification) {\n      // console.log(\"userVerification\", userVerification);\n      if (pageType === \"protected\" && (userVerification === null || userVerification === void 0 ? void 0 : userVerification.message) !== \"success\") {\n        router.push({\n          pathname: \"/login\",\n          query: {\n            text: true\n          }\n        });\n      } else {\n        // if logged user opens public page\n        if (pageType === \"public\" && (userVerification === null || userVerification === void 0 ? void 0 : userVerification.message) === \"success\") router.push(\"/\");\n      }\n    });\n  }, []);\n  return true;\n}\n\n_s(useAuthentication, \"vQduR7x+OPXj6PSmJyFnf+hU7bg=\", false, function () {\n  return [useRouter];\n});\n\nexport function isAuthenticated() {\n  return _isAuthenticated.apply(this, arguments);\n}\n\nfunction _isAuthenticated() {\n  _isAuthenticated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var userVerification;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api(\"verifyToken\", \"POST\");\n\n          case 2:\n            userVerification = _context.sent;\n            return _context.abrupt(\"return\", {\n              auth: (userVerification === null || userVerification === void 0 ? void 0 : userVerification.message) === \"success\"\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _isAuthenticated.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/asd/Work/Learning/next-frontend/utils/verifyAuth.js"],"names":["useRouter","useEffect","api","useAuthentication","text","pageType","router","console","log","process","env","BASE_URL","then","userVerification","message","push","pathname","query","isAuthenticated","auth"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,QAAjC,EAA2C;AAAA;;AACxD,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,OAAO,CAACC,GAAR,CAAYC,QAApC;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,GAAG,CAAC,aAAD,EAAgB,MAAhB,CAAH,CAA2BU,IAA3B,CAAgC,UAACC,gBAAD,EAAsB;AACpD;AACA,UAAIR,QAAQ,KAAK,WAAb,IAA4B,CAAAQ,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEC,OAAlB,MAA8B,SAA9D,EAAyE;AACvER,QAAAA,MAAM,CAACS,IAAP,CAAY;AACVC,UAAAA,QAAQ,EAAE,QADA;AAEVC,UAAAA,KAAK,EAAE;AAAEb,YAAAA,IAAI,EAAE;AAAR;AAFG,SAAZ;AAID,OALD,MAKO;AACL;AACA,YAAIC,QAAQ,KAAK,QAAb,IAAyB,CAAAQ,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEC,OAAlB,MAA8B,SAA3D,EACER,MAAM,CAACS,IAAP,CAAY,GAAZ;AACH;AACF,KAZD;AAaD,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAO,IAAP;AACD;;GAtBuBZ,iB;UACPH,S;;;AAuBjB,gBAAsBkB,eAAtB;AAAA;AAAA;;;8EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC0BhB,GAAG,CAAC,aAAD,EAAgB,MAAhB,CAD7B;;AAAA;AACCW,YAAAA,gBADD;AAAA,6CAGE;AACLM,cAAAA,IAAI,EAAE,CAAAN,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEC,OAAlB,MAA8B;AAD/B,aAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport api from \"../apiProvider\";\n\nexport default function useAuthentication(text, pageType) {\n  const router = useRouter();\n\n  console.log(\"base url\", process.env.BASE_URL);\n\n  useEffect(() => {\n    api(\"verifyToken\", \"POST\").then((userVerification) => {\n      // console.log(\"userVerification\", userVerification);\n      if (pageType === \"protected\" && userVerification?.message !== \"success\") {\n        router.push({\n          pathname: \"/login\",\n          query: { text: true },\n        });\n      } else {\n        // if logged user opens public page\n        if (pageType === \"public\" && userVerification?.message === \"success\")\n          router.push(\"/\");\n      }\n    });\n  }, []);\n\n  return true;\n}\n\nexport async function isAuthenticated() {\n  const userVerification = await api(\"verifyToken\", \"POST\");\n  // console.log(\"userVerification\", userVerification);\n  return {\n    auth: userVerification?.message === \"success\",\n  };\n}\n"]},"metadata":{},"sourceType":"module"}