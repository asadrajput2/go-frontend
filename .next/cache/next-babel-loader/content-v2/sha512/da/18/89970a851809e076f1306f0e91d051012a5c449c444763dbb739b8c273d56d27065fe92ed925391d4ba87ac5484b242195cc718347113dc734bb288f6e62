{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/asd/Work/Learning/next-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/asd/Work/Learning/next-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/asd/Work/Learning/next-frontend/pages/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React, { useEffect } from \"react\";\nimport api from \"../apiProvider\";\nimport SinglePost from \"../components/posts/SinglePost\";\nimport UserFAB from \"../components/user\";\nimport useAuthentication from \"../utils/verifyAuth\";\nexport default function Posts(_ref) {\n  _s();\n\n  var _postsList$reverse,\n      _this = this;\n\n  var postsList = _ref.postsList;\n  var router = useRouter();\n  useAuthentication(\"index\", \"protected\");\n\n  function handleAddPost() {\n    return _handleAddPost.apply(this, arguments);\n  }\n\n  function _handleAddPost() {\n    _handleAddPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              router.push(\"/posts/create\");\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handleAddPost.apply(this, arguments);\n  }\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return api(\"articles\");\n\n          case 2:\n            response = _context.sent;\n            postsList.replace(response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(UserFAB, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-post-btn\",\n      onClick: handleAddPost,\n      children: \"Add a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), postsList !== null && postsList !== void 0 && (_postsList$reverse = postsList.reverse()) !== null && _postsList$reverse !== void 0 && _postsList$reverse.length ? postsList.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(SinglePost, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }, _this);\n    }) : \"No posts to show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps() {\n//   const props = {};\n//   const response = await api(\"articles\");\n//   console.log(\"posts response: \", response);\n//   if (response) props.postsList = response;\n//   else props.postsList = null;\n//   return { props };\n// }\n\n_s(Posts, \"/cIi2rgTCtRjxYgWdMbDPdPIAmE=\", false, function () {\n  return [useRouter, useAuthentication];\n});\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/asd/Work/Learning/next-frontend/pages/index.jsx"],"names":["useRouter","React","useEffect","api","SinglePost","UserFAB","useAuthentication","Posts","postsList","router","handleAddPost","push","response","replace","data","reverse","length","map","post"],"mappings":";;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,SAASC,KAAT,OAA8B;AAAA;;AAAA;AAAA;;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAC3C,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AAEAM,EAAAA,iBAAiB,CAAC,OAAD,EAAU,WAAV,CAAjB;;AAH2C,WAK5BI,aAL4B;AAAA;AAAA;;AAAA;AAAA,8EAK3C;AAAA;AAAA;AAAA;AAAA;AACED,cAAAA,MAAM,CAACE,IAAP,CAAY,eAAZ;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAL2C;AAAA;AAAA;;AAS3CT,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,GAAG,CAAC,UAAD,CADlB;;AAAA;AACFS,YAAAA,QADE;AAERJ,YAAAA,SAAS,CAACK,OAAV,CAAkBD,QAAQ,CAACE,IAA3B;;AAFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAEJ,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGF,SAAS,SAAT,IAAAA,SAAS,WAAT,0BAAAA,SAAS,CAAEO,OAAX,oEAAsBC,MAAtB,GACGR,SAAS,CAACS,GAAV,CAAc,UAAAC,IAAI;AAAA,0BAAI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,eAAJ;AAAA,KAAlB,CADH,GAEG,kBAPN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;GAnCwBX,K;UACPP,S,EAEfM,iB;;;KAHsBC,K","sourcesContent":["import { useRouter } from \"next/router\";\nimport React, { useEffect } from \"react\";\nimport api from \"../apiProvider\";\nimport SinglePost from \"../components/posts/SinglePost\";\nimport UserFAB from \"../components/user\";\nimport useAuthentication from \"../utils/verifyAuth\";\n\nexport default function Posts({ postsList }) {\n  const router = useRouter();\n\n  useAuthentication(\"index\", \"protected\");\n\n  async function handleAddPost() {\n    router.push(\"/posts/create\");\n  }\n\n  useEffect(async() => {\n    const response = await api(\"articles\");\n    postsList.replace(response.data);\n  }, [])\n\n  return (  \n    <div className=\"home\">\n      <UserFAB />\n      <button className=\"add-post-btn\" onClick={handleAddPost}>\n        Add a new post\n      </button>\n      {postsList?.reverse()?.length\n        ? postsList.map(post => <SinglePost post={post} />)\n        : \"No posts to show\"}\n    </div>\n  );\n}\n\n// export async function getServerSideProps() {\n//   const props = {};\n//   const response = await api(\"articles\");\n//   console.log(\"posts response: \", response);\n//   if (response) props.postsList = response;\n//   else props.postsList = null;\n\n//   return { props };\n// }\n"]},"metadata":{},"sourceType":"module"}